ARM COMPILER V2.40a,  UART_TX_RX                                                           08/08/23  18:32:28  PAGE 1   


ARM COMPILER V2.40a, COMPILATION OF MODULE UART_TX_RX
OBJECT MODULE PLACED IN UART_TX_RX.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe UART_TX_RX.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include "LPC214X.h"
    2          
    3          unsigned char receive()
    4          {
    5   1          while(!(U0LSR & 0x01));
    6   1          return (U0RBR);
    7   1      }
    8          
    9          void transmit(unsigned char ch)
   10          {
   11   1       while (!(U0LSR & 0x20));
   12   1       
   13   1       U0THR =ch;
   14   1      }
   15          
   16          
   17          int main()
   18           {
   19   1           unsigned char key;
   20   1           unsigned char  temp[30] = "Welcome to FC" ;
   21   1           PINSEL0 = 5;
   22   1           U0LCR = 0x83;
   23   1           U0DLM =0x00;
   24   1           U0DLL =97;
   25   1           U0LCR =0x03;
   26   1           while(1)
   27   1           {
   28   2              key = receive();
   29   2              transmit(key);
   30   2           }
   31   1           return 0;
   32   1      }
ARM COMPILER V2.40a,  UART_TX_RX                                                           08/08/23  18:32:28  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         receive?T
 PUBLIC         transmit?T
 PUBLIC         main



*** DATA SEGMENT '?CON?UART_TX_RX':
 00000000          ?tpl?0001:
 00000000           BEGIN_INIT
 00000000            DB          'Welcome to FC',0x00
 0000000E            SPACE       16
 0000001E           END_INIT



*** CODE SEGMENT '?PR?receive?T?UART_TX_RX':
    5:     while(!(U0LSR & 0x01));
 00000000          L_1:
 00000000  4800      LDR         R0,=0xE000C014
 00000002  7800      LDRB        R0,[R0,#0x0]
 00000004  2101      MOV         R1,#0x1
 00000006  4208      TST         R0,R1
 00000008  D0FA      BEQ         L_1  ; T=0x00000000
    6:     return (U0RBR);
 0000000A  4800      LDR         R0,=0xE000C000
 0000000C  7800      LDRB        R0,[R0,#0x0]
    7: }
 0000000E  4770      BX          R14
 00000010          ENDP ; 'receive?T'


*** CODE SEGMENT '?PR?transmit?T?UART_TX_RX':
    9: void transmit(unsigned char ch)
 00000000  1C02      MOV         R2,R0 ; ch
 00000002  ---- Variable 'ch' assigned to Register 'R2' ----
   11:  while (!(U0LSR & 0x20));
 00000002          L_6:
 00000002  4800      LDR         R0,=0xE000C014
 00000004  7800      LDRB        R0,[R0,#0x0]
 00000006  2120      MOV         R1,#0x20
 00000008  4208      TST         R0,R1
 0000000A  D0FA      BEQ         L_6  ; T=0x00000002
   13:  U0THR =ch;
 0000000C  1C11      MOV         R1,R2 ; ch
 0000000E  4800      LDR         R0,=0xE000C000
 00000010  7001      STRB        R1,[R0,#0x0]
   14: }
 00000012  4770      BX          R14
 00000014          ENDP ; 'transmit?T'


*** CODE SEGMENT '?PR?main?UART_TX_RX':
   17: int main()
 00000000  B500      PUSH        {LR}
 00000002  B088      SUB         R13,#0x20
   18:  {
 00000004            ; SCOPE-START
   20:      unsigned char  temp[30] = "Welcome to FC" ;
 00000004  4800      LDR         R1,=?tpl?0001 ; ?tpl?0001
 00000006  A800      ADD         R0,R13,#0x0
 00000008  221E      MOV         R2,#0x1E
 0000000A          L_16:
 0000000A  780B      LDRB        R3,[R1,#0x0]
 0000000C  7003      STRB        R3,[R0,#0x0]
 0000000E  1C49      ADD         R1,R1,#0x1
 00000010  1C40      ADD         R0,R0,#0x1
 00000012  1E52      SUB         R2,R2,#0x1
ARM COMPILER V2.40a,  UART_TX_RX                                                           08/08/23  18:32:28  PAGE 3   

 00000014  D1F9      BNE         L_16  ; T=0x0000000A
   21:       PINSEL0 = 5;
 00000016  2105      MOV         R1,#0x5
 00000018  4800      LDR         R0,=0xE002C000
 0000001A  6001      STR         R1,[R0,#0x0]
   22:      U0LCR = 0x83;
 0000001C  2183      MOV         R1,#0x83
 0000001E  4800      LDR         R0,=0xE000C00C
 00000020  7001      STRB        R1,[R0,#0x0]
   23:      U0DLM =0x00;
 00000022  2100      MOV         R1,#0x0
 00000024  4800      LDR         R0,=0xE000C004
 00000026  7001      STRB        R1,[R0,#0x0]
   24:      U0DLL =97;
 00000028  2161      MOV         R1,#0x61
 0000002A  4800      LDR         R0,=0xE000C000
 0000002C  7001      STRB        R1,[R0,#0x0]
   25:      U0LCR =0x03;
 0000002E  2103      MOV         R1,#0x3
 00000030  4800      LDR         R0,=0xE000C00C
 00000032  7001      STRB        R1,[R0,#0x0]
   26:      while(1)
 00000034          L_12:
   28:          key = receive();
 00000034  F7FF      BL          receive?T  ; T=0x0001  (1)
 00000036  FFE4      BL          receive?T  ; T=0x0001  (2)
 00000038  1C02      MOV         R2,R0 ; key
 0000003A  ---- Variable 'key' assigned to Register 'R2' ----
   29:         transmit(key);
 0000003A  1C10      MOV         R0,R2 ; key
 0000003C  0600      LSL         R0,R0,#0x18 ; key
 0000003E  0E00      LSR         R0,R0,#0x18
 00000040  F7FF      BL          transmit?T  ; T=0x0001  (1)
 00000042  FFDE      BL          transmit?T  ; T=0x0001  (2)
   30:      }
 00000044  E7F6      B           L_12  ; T=0x00000034
   31:      return 0;
 00000046            ; SCOPE-END
 00000046  B008      ADD         R13,#0x20
 00000048  BC08      POP         {R3}
 0000004A  4718      BX          R3
 0000004C          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =        30
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
